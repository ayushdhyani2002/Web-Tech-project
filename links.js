const express = require('express');
const router = express.Router();
const schema = require(`${__dirname}/models/link`);

router.get('/', (req, res) => {
    res.send('Forbidden 404');
})



// generate a string of size 4, alpha numeric making sure it is unique and not in the database
function generateRandomString() {
    var text = "";
    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    for (var i = 0; i < 4; i++)
        text += possible.charAt(Math.floor(Math.random() * possible.length));
    return text;
}


router.post('/short' , async(req, res) => {
    try {
        console.log("Okay!Got a Link Shorten Request");
        console.log(await req.body.bigLink);
        // check if req has a smallLink
        if (await req.body.smallLink) {
            console.log("Got a smallLink");
            var smallLink = req.body.smallLink;
            // store the bigLink, smallLink,email in the database
            const link = new schema(
                {
                    bigLink : req.body.bigLink,
                    smallLink : req.body.smallLink,
                    by : req.body.email
                }
            );
            link.save((err, data) => {
                if (err) {
                    res.json({
                        success: false,
                        message: "A Small Link Already Exists, Try another one"
                    });
                } else {
                    res.json({success: true, message: data.smallLink});
                }
            });
            
        }else{
            if(await req.body.email){
                console.log("Email is present");
                // generate a random string of size 4, alpha numeric
                var smallLink = generateRandomString();
                // store the bigLink, smallLink in the database
                const link = new schema(
                    {
                        bigLink : req.body.bigLink,
                        smallLink : smallLink,
                        by : req.body.email
                    }
                );
                link.save((err, data) => {
                    if (err) {
                        res.json({
                            success: false,
                            message: "A Small Link Already Exists, Try another one"
                        });
                    } else {
                        res.json({success: true, message: smallLink});
                    }
                });

            }
            else{
                console.log("Email is not present");
                // generate a random string of size 4, alpha numeric
                var smallLink = generateRandomString();
                // store the bigLink, smallLink in the database
                const link = new schema(
                    {
                        bigLink : req.body.bigLink,
                        smallLink : smallLink
                    }
                );
                link.save((err, data) => {
                    if (err) {
                        res.json({
                            success: false,
                            message: "A Small Link Already Exists, Try another one"
                        });
                    } else {
                        res.json({success: true, message: smallLink});
                    }
                });
            }
        }
        
        
        
    } catch (error) {
        console.log(error);
        res.json({
            success: false,
            message: "Something Went Wrong On Our Side. Please Try Again Later"
        });
    }
})



// retrive all the links generated by the user with the email
router.post('/all', async(req, res) => {
    try {
        console.log("Okay!Got a Link Retrieve Request");
        console.log(await req.body.email);
        // check if req has a smallLink
        if (await req.body.email) {
            console.log("Got a email");
            var email = req.body.email;
            // store the bigLink, smallLink,email in the database
            schema.find({by: email}, (err, data) => {
                if (err) {
                    res.json({
                        success: false,
                        message: "Something Went Wrong On Our Side. Please Try Again Later"
                    });
                } else {
                    res.json({success: true, message: data});
                }
            });
            
        }

    }
    catch (error) {
        console.log(error);
        res.json({
            success: false,
            message: "Something Went Wrong On Our Side. Please Try Again Later"
        });
    }
})


router.post('/linkcount', async(req, res) => {
    try {
        if (await req.body.email) {
            schema.find({by: req.body.email}, (err, data) => {
                if (err) {
                    res.json({
                        success: false,
                        message: "Something Went Wrong On Our Side. Please Try Again Later"
                    });
                } else {
                    // find number of links generated by the user
                    res.json({success: true, message: data.length});
                }
            });
            
        }
    } catch (error) {
        console.log(error);
    }
})



module.exports = router;

